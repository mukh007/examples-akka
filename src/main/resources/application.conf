
network{
  hostname = "127.0.0.1"
}

zookeeper {
  applicationPrefix = "workshop_froyo"
  quorum = "froyo:2181"
}

akka {

  // means we want to be cluster-y; it announes actors to the cluster
  actor.provider = "akka.cluster.ClusterActorRefProvider"

  // layer below cluster; TCP stuff
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = ${network.hostname} // points to a value in this config file
      port = 0 // ??? maybe gives random port properties (need to verify)
    }
    // to cut down on transport errors
    maximum-payload-bytes = 100000000b //1M
  }

  cluster {
    seed {
      zookeeper {
        url = ${zookeeper.quorum}
        path = "/akka/cluster/seed"
      }
    }
  }

  // attempt to use akka hbase persist. plugin
  persistence {
    journal {
      plugin = "hbase-journal"
    }
    snapshot-store {
      plugin = "hadoop-snapshot-store"
    }

    # we need event publishing for tests
    publish-confirmations = on
    publish-plugin-commands = on

    # disable leveldb (default store impl)
    journal.leveldb.native = off
  }



}


hbase-journal {
  publish-testing-events = on

  hadoop-pass-through {
    hbase.zookeeper.quorum = ${zookeeper.quorum}
  }

  circuit-breaker {
    max-failures = 10
    call-timeout = 30s
    reset-timeout = 30s
  }
}

hadoop-snapshot-store {
  mode = "hbase"
  hbase {
    # Name of the table to be used by the journal (need to manually create)
    table =  ${zookeeper.applicationPrefix}".akka_snapshots"

    # Name of the family to be used by the journal
    family = "snapshot"

  }
}

hbase-journal {
  # Name of the table to be used by the journal
  table =  ${zookeeper.applicationPrefix}".akka_messages"

  # Name of the family to be used by the journal
  family = "message"

}


# create table like this: ${zookeeper.applicationPrefix}".akka_snapshots"
# eg.:
# create 'workshop_froyo.akka_messages','message'

# create 'workshop_froyo.akka_snapshots','snapshot'

